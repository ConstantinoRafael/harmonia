generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @default(autoincrement()) // ID autoincremental
  name        String
  email       String       @unique
  password    String       // Hash da senha
  isAdmin     Boolean      @default(false) // Define se o usuário é administrador
  age         Int          // Idade do usuário
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  registrations Registration[]
}

model Workshop {
  id              Int          @id @default(autoincrement()) // ID autoincremental
  title           String
  description     String
  professorName   String       // Nome do professor responsável pelo workshop
  date            DateTime     // Data e hora do workshop
  duration        Int          // Duração em minutos
  capacity        Int          // Quantidade máxima de participantes
  address         String       // Endereço do workshop
  isInfantojuvenil Boolean    @default(false) // Indica se é um workshop infantojuvenil
  registrations   Registration[]
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt

  @@unique([date, duration], map: "workshop_date_duration_unique") // Evita conflitos de horários
}

model Registration {
  id          Int       @id @default(autoincrement()) // ID autoincremental
  userId      Int
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  workshopId  Int
  workshop    Workshop  @relation(fields: [workshopId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())

  @@unique([userId, workshopId], map: "registration_unique") // Garante que uma pessoa não se inscreva no mesmo workshop mais de uma vez
}
