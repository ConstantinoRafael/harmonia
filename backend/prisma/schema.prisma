// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  name        String
  email       String   @unique
  password    String   // Hash da senha
  isAdmin     Boolean  @default(false) // Define se o usuário é administrador
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  registrations Registration[]
}

model Workshop {
  id          String      @id @default(cuid())
  title       String
  description String
  date        DateTime    // Data e hora do workshop
  duration    Int         // Duração em minutos
  capacity    Int         // Quantidade máxima de participantes
  registrations Registration[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@unique([date, duration], map: "workshop_date_duration_unique") // Evita conflitos de horários
}

model Registration {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  workshopId  String
  workshop    Workshop @relation(fields: [workshopId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())

  @@unique([userId, workshopId], map: "registration_unique") // Garante que uma pessoa não se inscreva no mesmo workshop mais de uma vez
}